@using MvcTest.Controllers;
@using MvcTest.Models;
@using MvcTest.Data;
@using System.Globalization;
@{
    Context.Items["Title"] = "Шахматка - " + (Context.Items["Hotel"] as Hotel)?.Name;
}
<script src="/js/RoomsReservationsTable.js"></script>
<style>

    th, td {
        border: 1px solid #ddd;
        padding-left: 5px;
        text-align: center;
        overflow-wrap: break-word;
        min-width: 120px;
    }

    thead {
        background-color: #f2f2f2;
    }

    .container {
        max-width: 100%;
        padding: 0px;
    }
</style>
<h3 id="datesLable">@(((DateTime)Context.Items["start"]).ToString("dd.MM.yy")) — @(((DateTime)Context.Items["end"]).ToString("dd.MM.yy"))</h3>
<div style="overflow-x: auto;" class="TableDiv">
    @{
        Context.Items["IsClientTable"] = false;
    }
    @await Component.InvokeAsync("RoomsReservationsTable")
</div>
<div class="container-fluid">
    <div class="row mt-5 justify-content-start">
        <div class="col-sm-6">
            <div class="form-group">
                <label for="start" class="col-form-label">Начало:</label>
                <div>
                    <input type="date" class="form-control" id="start" width="150px">
                </div>
            </div>
            <div class="form-group">
                <label for="end" class="col-form-label">Конец:</label>
                <div>
                    <input type="date" class="form-control" id="end" width="150px">
                </div>
            </div>
            <div class="form-group">
                <button onclick="LoadNewDates(@((Context.Items["Hotel"] as Hotel)?.Id))" class="btn btn-primary">Перейти</button>
            </div>
        </div>
    </div>
</div>
