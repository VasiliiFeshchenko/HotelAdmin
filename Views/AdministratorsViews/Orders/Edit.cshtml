@using MvcTest.Models.HotelManagerModels;
@using HotelAdmin.Data.Models.Order;
@model MvcTest.Controllers.OrderModel
@{
    Context.Items["Title"] = "Заказ №" + Model.Id+" - "+Model.ClientName;
}
<style>
    .btn{
        margin-top:5px;
    }
</style>
<script src="~/js/CreateOrEditOrder.js"></script>
<script src="~/js/OrderList.js"></script>
<h1>Редактировать</h1>

<h3>#@(Model.Id),</h3>
<p>Создан @(Model.CreationDate.ToString("dd.MM.yyyy HH:mm")) @((Model.LastUpdateDate != null) ? $", время последнего редактирования {((DateTime)Model.LastUpdateDate).ToString("dd.MM.yyyy HH:mm")}" : "")</p>
<hr />
@await Component.InvokeAsync("OrderInfo", new { model = Model })
<hr />
<div class="form-group">
    <button onclick="SaveButtonClick()" class="btn btn-primary">Сохранить изменения</button>
</div>
@{
    if ((bool)Context.Items["IsCanceled"])
    {
        <div class="form-group">
            <button onclick="RecoverOrder(@(Model.Id),@(Model.HotelId))" class="btn btn-outline-dark">Восстановить заказ (внесенные изменения не сохранятся)</button>
        </div>
    }
    else
    {
        <div class="form-group">
            <button onclick="CancelOrder(@(Model.Id),@(Model.HotelId))" class="btn btn-dark">Отменить заказ (внесенные изменения не сохранятся)</button>
        </div>
    }
}
<div class="form-group">
    <button onclick="DeleteOrder(@(Model.Id),@(Model.HotelId))" class="btn btn-danger delete-button">Удалить заказ</button>
</div>
@*<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label asp-for="TelephoneNumber" class="control-label">Номер телефона</label>
            <input asp-for="TelephoneNumber" class="form-control" value="@(Model.TelephoneNumber)" />
            <span asp-validation-for="TelephoneNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EMail" class="control-label"></label>
            <input asp-for="EMail" class="form-control" value="@(Model.EMail)" />
            <span asp-validation-for="EMail" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ClientName" class="control-label">Имя клиента (ФИО/имя-фамилия)</label>
            <input asp-for="ClientName" class="form-control" value="@(Model.ClientName)" />
            <span asp-validation-for="ClientName" class="text-danger"></span>
        </div>
        <div id="sections">
            @{
                foreach (var item in Model.Sections)
                {
                    string commentEncoded = System.Web.HttpUtility.UrlPathEncode(item.Comment);
                    <script>
                        window.addEventListener('load', function () {
                            var roomDecoded = decodeURIComponent("@(System.Web.HttpUtility.UrlEncode(item.Room))");
                            var startDecoded = decodeURIComponent("@(System.Web.HttpUtility.UrlEncode(item.StartDate.ToString("yyyy-MM-dd")))");
                            var endDecoded = decodeURIComponent("@(System.Web.HttpUtility.UrlEncode(item.EndDate.ToString("yyyy-MM-dd")))");
                            var commentDecoded = decodeURIComponent("@commentEncoded");
                            addNewSection(roomDecoded, @item.NumberOfPeople, startDecoded, endDecoded, commentDecoded);
                        });
                    </script>
                }
            }
        </div>
        <div class="form-group">
            <button onclick="addNewSection()" class="btn btn-primary">Добавить номер</button>
        </div>
        <div class="form-group">
            <label asp-for="Price" class="control-label">Общая стоимость заказа</label>
            <input asp-for="Price" class="form-control" value="@(Model.Price)" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Prepayment" class="control-label">Сумма предоплаты</label>
            <input asp-for="Prepayment" class="form-control" value="@(Model.Prepayment)" />
            <span asp-validation-for="Prepayment" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="PrepaymentDeadline" class="control-label">Крайний срок внесения предоплаты</label>
            <input asp-for="PrepaymentDeadline" class="form-control" value="@(Model.PrepaymentDeadline.ToString("yyyy-MM-ddTHH:mm"))" />
            <span asp-validation-for="PrepaymentDeadline" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="PayedPrice" class="control-label">Заплаченная часть стоимости</label>
            <input asp-for="PayedPrice" class="form-control" value="@(Model.PayedPrice)" />
            <span asp-validation-for="PayedPrice" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Источник заказа</label>
            <select class="form-select" id="option">                
                @{
                    List<string> options = await OrderSource.GetAllSources();
                    if (Model.Source != options[0])
                    {
                        <option>@Model.Source</option>
                        int i = 0;
                        foreach (var option in options)
                        {
                            if (i != 0 && option != Model.Source)
                            {
                                <option>@option</option>
                            }
                            i++;
                        }
                    }
                    else
                    {
                        <option>@Model.Source (нельзя изменить)</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label asp-for="Comment" class="control-label">Комментарий к заказу</label>
            <textarea asp-for="Comment" rows="1" oninput='this.style.height = "";this.style.height = this.scrollHeight + "px"' class="form-control" value="@(Model.Comment)"></textarea>
            <span asp-validation-for="Comment" class="text-danger"></span>
        </div>
        <div class="form-group">
            <button onclick="SaveButtonClick()" class="btn btn-primary">Сохранить изменения</button>
        </div>
        @{
            if ((bool)Context.Items["IsCanceled"])
            {
                <div class="form-group">
                    <button onclick="RecoverOrder(@(Model.Id),@(Model.HotelId))" class="btn btn-outline-dark">Восстановить заказ</button>
                </div>
            }
            else
            {
                <div class="form-group">
                    <button onclick="CancelOrder(@(Model.Id),@(Model.HotelId))" class="btn btn-dark">Отменить заказ</button>
                </div>
            }
        }
        <div class="form-group">
            <button onclick="DeleteOrder(@(Model.Id),@(Model.HotelId))" class="btn btn-danger delete-button">Удалить заказ</button>
        </div>
        <div class="form-group" id="hotelId">
            <input asp-for="HotelId" type="hidden" class="form-control" value="@(Model.HotelId)" />
        </div>
        <div class="form-group" id="orderId">
            <input asp-for="Id" type="hidden" class="form-control" value="@(Model.Id)" />
        </div>
    </div>
</div>*@

